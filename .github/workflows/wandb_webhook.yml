name: Update and Deploy to GitHub Pages

on:
  repository_dispatch:
    types: [model_alias_updated]
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  update-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Check out the repository
      uses: actions/checkout@v2

    - name: Update script.js with new model data
      run: |
        echo "Updating notification/script.js with new model data..."
        cat <<EOF > notification/script.js
        document.addEventListener('DOMContentLoaded', function () {
            const modelStatus = "${{ github.event.client_payload.alias }}";
            const entityName = "${{ github.event.client_payload.entity_name }}";
            const projectName = "${{ github.event.client_payload.project_name }}";
            const artifactCollectionName = "${{ github.event.client_payload.artifact_collection_name }}";
            const modelId = "${{ github.event.client_payload.model_id }}";

            const statusElement = document.getElementById('status');
            const announcementElement = document.getElementById('announcement');

            statusElement.textContent = \`Entity: \${entityName}, Project: \${projectName}\`;
            announcementElement.textContent = \`Model ID: \${modelId}, Alias: \${modelStatus}\`;

            if (modelStatus === "production") {
                announcementElement.style.color = "green";
                announcementElement.textContent += " - The latest model has been deployed!";
            } else {
                announcementElement.style.color = "red";
                announcementElement.textContent += " - Model is not in production.";
            }
        });
        EOF

    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./notification
        destination_dir: . # 이 옵션은 gh-pages 브랜치의 루트 디렉토리로 배포합니다.
        keep_files: true # 기존 파일을 유지하고 새로운 파일만 덮어씁니다.
        force_orphan: true # orphan 브랜치를 사용하여 푸시 실패 문제를 해결할 수 있습니다.